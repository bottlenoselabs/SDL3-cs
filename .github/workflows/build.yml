name: "Build"
permissions:
  contents: read

on:
  workflow_call:
  workflow_dispatch:
  push:
    tags:
      - v*
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:

  build-native-libraries-job:
    name: "Build native libraries: ${{ matrix.platform.rid }}"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows (x64), os: windows-2025, rid: win-x64 }
          - { name: Windows (arm64), os: windows-2025, rid: win-arm64 }
          - { name: macOS (x64), os: macos-latest, rid: osx-x64 }
          - { name: macOS (arm64), os: macos-latest, rid: osx-arm64 }
          - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
          - { name: Linux (arm64), os: ubuntu-24.04-arm, rid: linux-arm64 }
    steps:

      - name: "Clone Git repository"
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: "Cache: SDL"
        id: cache-libs-SDL
        uses: actions/cache@v4
        with:
          path: "./lib/${{ matrix.platform.rid }}/*SDL3.*"
          key: "native-libraries_${{ matrix.platform.rid }}_SDL3_${{ hashFiles('ext/SDL/**/*') }}"

      - name: "Cache: SDL_image"
        id: cache-libs-SDL_image
        uses: actions/cache@v4
        with:
          path: "./lib/${{ matrix.platform.rid }}/*SDL3_image.*"
          key: "native-libraries_${{ matrix.platform.rid }}_SDL3_image_${{ hashFiles('ext/SDL_image/**/*') }}"

      - name: "Cache: SDL_ttf"
        id: cache-libs-SDL_ttf
        uses: actions/cache@v4
        with:
          path: "./lib/${{ matrix.platform.rid }}/*SDL3_ttf.*"
          key: "native-libraries_${{ matrix.platform.rid }}_SDL3_ttf_${{ hashFiles('ext/SDL_ttf/**/*') }}"

      - name: "Install dependencies: linux-x64"
        if: matrix.platform.rid == 'linux-x64' && (steps.cache-libs-SDL.outputs.cache-hit != 'true' || steps.cache-libs-SDL_image.outputs.cache-hit != 'true' || steps.cache-libs-SDL_ttf.outputs.cache-hit != 'true')
        run: sudo apt-get update && sudo apt-get install build-essential git make pkg-config cmake ninja-build nasm gnome-desktop-testing libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev libpipewire-0.3-dev libwayland-dev libdecor-0-dev liburing-dev

      - name: "Install dependencies: linux-arm64"
        if: matrix.platform.rid == 'linux-arm64' && (steps.cache-libs-SDL.outputs.cache-hit != 'true' || steps.cache-libs-SDL_image.outputs.cache-hit != 'true' || steps.cache-libs-SDL_ttf.outputs.cache-hit != 'true')
        run: sudo apt-get update && sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu build-essential git make pkg-config cmake ninja-build nasm gnome-desktop-testing libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev libpipewire-0.3-dev libwayland-dev libdecor-0-dev liburing-dev

      - name: "Install dependencies: osx-x64"
        if: matrix.platform.rid == 'osx-x64' && (steps.cache-libs-SDL.outputs.cache-hit != 'true' || steps.cache-libs-SDL_image.outputs.cache-hit != 'true' || steps.cache-libs-SDL_ttf.outputs.cache-hit != 'true')
        run: brew install nasm

      - name: "Build: SDL"
        if: steps.cache-libs-SDL.outputs.cache-hit != 'true'
        shell: bash
        run: ./ext/build-native-library-SDL.sh release ${{ matrix.platform.rid }}

      - name: "Build: SDL_image"
        if: steps.cache-libs-SDL_image.outputs.cache-hit != 'true'
        shell: bash
        run: ./ext/build-native-library-SDL_image.sh release ${{ matrix.platform.rid }}

      - name: "Build: SDL_ttf"
        if: steps.cache-libs-SDL_ttf.outputs.cache-hit != 'true'
        shell: bash
        run: ./ext/build-native-library-SDL_ttf.sh release ${{ matrix.platform.rid }}

      - name: "Upload"
        uses: actions/upload-artifact@v4
        with:
          name: "native-libraries-${{ matrix.platform.rid }}"
          path: "./lib/${{ matrix.platform.rid }}"
          if-no-files-found: error

  build-dotnet-job:
    name: "Build .NET solution"
    needs: [build-native-libraries-job]
    runs-on: ubuntu-latest
    steps:

      - name: "Clone Git repository"
        uses: actions/checkout@master

      - name: "Download native libraries: win-x64"
        uses: actions/download-artifact@v4
        with:
          name: "native-libraries-win-x64"
          path: "./lib/win-x64"

      - name: "Download native libraries: win-arm64"
        uses: actions/download-artifact@v4
        with:
          name: "native-libraries-win-arm64"
          path: "./lib/win-arm64"

      - name: "Download native libraries: osx-x64"
        uses: actions/download-artifact@v4
        with:
          name: "native-libraries-osx-x64"
          path: "./lib/osx-x64"

      - name: "Download native libraries: osx-arm64"
        uses: actions/download-artifact@v4
        with:
          name: "native-libraries-osx-arm64"
          path: "./lib/osx-arm64"

      - name: "Download native libraries: linux-x64"
        uses: actions/download-artifact@v4
        with:
          name: "native-libraries-linux-x64"
          path: "./lib/linux-x64"

      - name: "Download native libraries: linux-arm64"
        uses: actions/download-artifact@v4
        with:
          name: "native-libraries-linux-arm64"
          path: "./lib/linux-arm64"

      - name: "Download generated C# code: SDL"
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: "generated-cs-SDL"
          path: "./src/cs/production/SDL.Interop/Generated"

      - name: "Download generated C# code: SDL_image"
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: "generated-cs-SDL_image"
          path: "./src/cs/production/SDL_image.Interop/Generated"

      - name: "Download generated C# code: SDL_ttf"
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: "generated-cs-SDL_ttf"
          path: "./src/cs/production/SDL_ttf.Interop/Generated"

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: "Build .NET solution"
        run: dotnet build "./src/cs"

      - name: "Upload generated C# code with source generators: SDL"
        uses: actions/upload-artifact@v4
        with:
          name: "generated-cs-SDL-with-source-generators"
          path: "./src/cs/production/SDL.Interop/Generated"
          if-no-files-found: error

      - name: "Upload generated C# code with source generators: SDL_image"
        uses: actions/upload-artifact@v4
        with:
          name: "generated-cs-SDL_image-with-source-generators"
          path: "./src/cs/production/SDL_image.Interop/Generated"
          if-no-files-found: error

      - name: "Upload generated C# code with source generators: SDL_ttf"
        uses: actions/upload-artifact@v4
        with:
          name: "generated-cs-SDL_ttf-with-source-generators"
          path: "./src/cs/production/SDL_ttf.Interop/Generated"
          if-no-files-found: error
